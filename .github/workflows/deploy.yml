name: Blue/Green Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/image-change

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: Run tests
      run: npm test -- --watchAll=false --passWithNoTests
      
    - name: Build application
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        

          
    - name: Build and push Blue image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:blue-${{ github.sha }}
        build-args: |
          DEPLOYMENT_TYPE=BLUE
          VERSION=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Green image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:green-${{ github.sha }}
        build-args: |
          DEPLOYMENT_TYPE=GREEN
          VERSION=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          # 프로젝트 디렉토리 생성
          sudo mkdir -p /opt/blue-green-deployment
          sudo chown $USER:$USER /opt/blue-green-deployment
          cd /opt/blue-green-deployment
          
          # 프로젝트 클론 또는 업데이트
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/${{ github.repository }}.git .
          fi
          
          # 스크립트 실행 권한 부여
          chmod +x scripts/deploy.sh
          
          # 환경변수 설정
          export VERSION=${{ github.sha }}
          export BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          export REACT_APP_DEPLOYMENT_TYPE=GREEN
          export REGISTRY=${{ env.REGISTRY }}
          export IMAGE_NAME=${{ env.IMAGE_NAME }}
          
          # 현재 활성 환경 확인
          if docker-compose ps app-active | grep -q "Up"; then
            CURRENT_ENV="BLUE"
          else
            CURRENT_ENV="GREEN"
          fi
          
          # Blue/Green 배포 실행
          ./scripts/deploy.sh $VERSION $CURRENT_ENV
          
 